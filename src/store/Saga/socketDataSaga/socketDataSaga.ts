import { takeEvery, put, fork, all } from 'redux-saga/effects';import { dataSocket } from '../../socketData';import { socket } from '../../../socket/socket';import { socketActions } from '../../socketData/actions';function* watcherDataSocket() {  yield takeEvery(socketActions.SOCKET_DATA_ACTION, workerDataSocket);}function* watcherGetSocketData() {  yield takeEvery(socketActions.GET_SOCKET_DATA_ACTION, getSocketDataAction);}function* workerDataSocket(data: any) {  console.log('datttttaa', data);  try {    yield  socket.emit('message', data.data);  } catch (e) {    console.log(new Error());  }}function* getSocketDataAction(data: any) {  try {    console.log('data ------->', data);    yield put(dataSocket(data.data));  } catch (e) {    console.log(new Error());  }}export default function* socketDataSaga() {  yield all([    fork(watcherDataSocket),    fork(watcherGetSocketData)  ]);}